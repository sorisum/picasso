apply plugin: 'android'
apply plugin: 'signing'

dependencies {
    compile project(':picasso')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        versionCode 1
        versionName '1.0.0'
        minSdkVersion 9
        targetSdkVersion 19
    }

    lintOptions {
        ignoreWarnings true
        xmlReport false
        htmlReport true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}


def generatePom() {
    def pom = pom{
        project {
            name 'picasso-sample'
            groupId project.group
            artifactId project.name
            version project.version
            inceptionYear '2013'
            description ''
            url 'https://github.com/sephiroth74/picasso'

            licenses {
                license {
                    name 'Apache Version 2.0'
                   url 'http://www.apache.org/licenses/LICENSE-2.0'
                    distribution 'repo'
                }
            }

            scm {
                url                 "https://github.com/sephiroth74/picasso"
                connection          "scm:git:git@github.com:sephiroth74/picasso.git"
                developerConnection "scm:git:git@github.com:sephiroth74/picasso.git"
            }

            organization {
                name 'Square, Inc.'
                url 'http://square.com'
            }

            developers {
                developer {
                    id 'square'
                    name 'Square'
                    roles {
                        role 'author'
                        role 'developer'
                    }
                }
            }

            contributors {
                contributor {
                    name 'Alessandro Crugnola'
                    email 'alessandro.crugnola@gmail.com'
                    url 'http://blog.sephiroth.it'
                    roles {
                        role 'developer'
                    }
                }
            }
        }
    }
}

task writePom {
    ext.pomXml = file("pom.xml")
    inputs.file(project.buildFile)
    outputs.file(pomXml)
    doLast {
        generatePom().writeTo(pomXml)
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }            
            
            pom = generatePom()

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword )
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword )
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.allSource
}

signing {
    sign configurations.archives
}

artifacts {  
    archives sourcesJar
}


build.dependsOn(writePom)
uploadArchives.dependsOn(build)